{"version":3,"sources":["resources/imageCategories.js","components/CardTable.js","App.js","index.js"],"names":["imageCategories","style","paths","CardTable","cardsSelected","useState","randomNums","setRandomNums","allSelected","setAllSelected","cardSelected","event","score","currentTarget","innerText","key","target","alt","eventCheck","classList","putBackCard","index","splice","result","obj","find","x","indexOf","searchAllSelected","length","contains","remove","add","concat","getRandomNumber","Math","floor","random","getRandomKey","playerHand","map","n","className","onClick","src","path","card_builder","i","random_image_index","random_image","random_style","push","App","state","images","img","desc","searchTerm","mostRecent","cardsPicked","editSearchTerm","e","setState","value","dynamicSearch","update","filter","image","includes","toLowerCase","displayRecent","console","log","displayCardsSelected","allCardsSelected","temp","card","document","getElementById","visibility","this","showScoreHelp","id","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.3a375020.chunk.js","sourcesContent":["const imageCategories = [\r\n    {\r\n        style: 'bikini',\r\n        paths: ['ss.jpg', 'hd.jpg', 'bp2.jpg', '0860ceac2dbe2ef205b883a0249e756f.jpg',\r\n        'c371794c36d0dcfb37d55660b5bda40a.jpg']        \r\n    },\r\n    {\r\n        style: 'lingerie',\r\n        paths: ['bp.jpg', 'i.jpg', 'bp3.jpg', '22-lrg.jpg', '77fedc586cfe311804e35228bfefe383.jpg',\r\n        'Eq9EJTCXIAY03Ep.jpg', '7a8ba45fea0e24377d674b26698193fa.jpg', '8c2b59270d2a0ce7adb61a84e554dd95.jpg',\r\n        '8e81705d34467a88d6303ec93405339e.png', '9r7jbqxp63551.jpg']\r\n    },\r\n    {\r\n        style: 'spank',\r\n        paths: ['ah.jpg', 'k.jpg', 'jessica-ashley-in-oasis9.jpg', 'Ja533x800.jpg', '8kxkHnRT.jpg']\r\n    },\r\n    {\r\n        style: 'glamour',\r\n        paths: ['mona.jpg', 'tamara.jpg', '71038e8e6832ded8beba88c8d4633b24.jpg', 'fccd48ff97489b91f576b4f26dd78cb3.jpg',\r\n            '021.jpg']\r\n    },\r\n    {\r\n        style: 'wildcard',\r\n        paths: ['add2greaterthan3.jpg', 'sub27ormore.jpg', 'add2lessthan3.jpg']\r\n    },\r\n    {\r\n        style: 'cartoon',\r\n        paths: ['20210124095143_1.jpg', '20210414083304_1.jpg', '20210414084021_1.jpg', '20210415142111_1.jpg', '20210415142223_1.jpg']\r\n    }\r\n \r\n]\r\n\r\nexport default imageCategories","import React, {useState} from 'react'\r\nimport imageCategories from '../resources/imageCategories'\r\n\r\nimport '../styles/CardTable.css'\r\nimport '../styles/CardTable.scss';\r\n\r\nconst CardTable = ({cardsSelected}) => {\r\n\r\n    // get five random numbers to determine the categories\r\n    // get five random scores from 1 to 9\r\n    // build the cards: each of the five has an image with styling \r\n    // (border color, zoomed in image, bevelled edges, and score)\r\n\r\n    const [randomNums, setRandomNums] = useState([])\r\n    let [allSelected, setAllSelected] = useState([])\r\n\r\n    // const playCards = (event) => {\r\n    //     // console.log(parseInt(allSelected[0].score) * 2 ) // WORKS\r\n    //     // pass in hardcoded values for wildcards (greater than 8; but don't display them)\r\n    //     // console.log(allSelected[0].score === '' ? 'wildcard': allSelected[0].score) // for when a wildcard is selected (no number)\r\n    //     console.log(allSelected);\r\n    //     allSelected.forEach( (card) =>  {\r\n    //         // console.log(card.score);\r\n    //         console.log(card.key);\r\n    //     })    \r\n    // }\r\n\r\n    const cardSelected = (event) => {\r\n        // REVIEW: important for accessing the parent -- currentTarget\r\n        // console.log(event.currentTarget.classList)\r\n        // event.target is what is clicked -- ex: the image itself\r\n\r\n        const score = event.currentTarget.innerText\r\n        const key = event.target.alt       \r\n        const eventCheck = event.currentTarget.classList\r\n    \r\n        function putBackCard (index) {\r\n\t\t\tallSelected.splice(index,1);\r\n        }\r\n\r\n        //returns index of item, if found\r\n        // returns -1 if item not found\r\n        function searchAllSelected() {\r\n             let obj = allSelected.find(x => x.key  === key)\r\n             return allSelected.indexOf(obj)\r\n             //REFERENCE: for (let {investor, value, investment} of originalData) {\r\n            //     newData.find(x => x.investor === investor)[investment] += value;\r\n            //   }            \r\n        }\r\n            \r\n        //move line up: option + up arrow\r\n        let result = searchAllSelected()\r\n        // console.log(`result is: ${result}`)\r\n\r\n        if (allSelected.length < 3) { \r\n           if (result > -1) {\r\n            putBackCard(result);\r\n            eventCheck.contains('cardSelected') ? \r\n            eventCheck.remove('cardSelected') : eventCheck.add('cardSelected')\r\n           } \r\n\r\n           if (result === -1) {\r\n            //    console.log(key);\r\n                setAllSelected(allSelected.concat({key: key, score: score}))\r\n                eventCheck.contains('cardSelected') ? \r\n                eventCheck.remove('cardSelected') : eventCheck.add('cardSelected')\r\n           }             \r\n        }\r\n\r\n        if (result > 0 && allSelected.length === 3) {         \r\n            eventCheck.remove('cardSelected')\r\n            putBackCard(result)\r\n            \r\n        }\r\n    }    \r\n\r\n    const shuffleCards = () => {\r\n\r\n        //reset allSelected at start of a new game\r\n        setAllSelected([])\r\n\r\n        // reseting player hand to start a new game\r\n        playerHand = []\r\n        \r\n        const card_builder = []\r\n        for (let i=0; i < 5; i++) {\r\n            \r\n            //n selects the object\r\n            let obj = Math.floor(Math.random() * imageCategories.length)\r\n\r\n                \r\n            // select an image from obj\r\n            let random_image_index = Math.floor(Math.random() * imageCategories[obj].paths.length);\r\n            let random_image = imageCategories[obj].paths[random_image_index];\r\n            let random_style = imageCategories[obj].style;\r\n\r\n\r\n            card_builder.push(\r\n                { score: getRandomNumber(),\r\n                  style: random_style,\r\n                  path: random_image,\r\n                  key: getRandomKey()\r\n                }\r\n             );\r\n        }\r\n\r\n\r\n        setRandomNums(card_builder)\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/55987953/how-do-i-update-states-onchange-in-an-array-of-object-in-react-hooks\r\n    \r\n   \r\n    const getRandomNumber = () => {\r\n        return Math.floor(Math.random() * 8) + 1;\r\n    };\r\n\r\n    const getRandomKey = () => {\r\n        return Math.floor(Math.random() * 1500000) + 1;\r\n    }\r\n\r\n    let playerHand = randomNums.map((n) => {\r\n        return (\r\n            <div className=\"card\" key={n.key}  onClick={cardSelected}>\r\n                {/* className= {selectedCard ? 'cardSelected' : null }  */}\r\n            <div    >\r\n                <div className=\"score\">   \r\n                    <h1 className= {  n.style === \"wildcard\" ? \"wildcard\" : n.style}> {n.style === \"wildcard\" ? \"W\" : n.score}</h1>\r\n                </div>\r\n                \r\n                <img src= {'images/' + n.style + \"/\" + n.path}  alt= {n.path+ \"_\" + n.key} />\r\n            </div>\r\n            </div>\r\n        )\r\n    }) \r\n\r\n    \r\n        return (\r\n            <div className=\"cardtable\">\r\n               \r\n                  \r\n                <div className=\"playerHand\">\r\n                    {playerHand}\r\n                </div>  \r\n \r\n                <button className=\"ui basic button shuffleButton\" onClick={shuffleCards}>Shuffle Cards</button> \r\n                {/* only display if user has submitted three cards */}\r\n                {/* <button className=\"ui basic button playCards\" onClick= {playCards}  >Play Cards</button>    */}\r\n                <button className=\"ui basic button playCards\" onClick ={()=> {\r\n                    cardsSelected(allSelected);\r\n                }}>Play Cards</button>        \r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default CardTable","import React from 'react'\r\n\r\nimport CardTable from './components/CardTable'\r\n\r\nimport './styles/App.css'\r\nimport './styles/App.scss'\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n        // todo:\r\n        /*\r\n            add a word list -- a word cloud -- section for potential words to enter; user can click on these and see results\r\n                - maybe a word cloud instead of a search bar ???\r\n            create a v2 with \"keyword buttons\" instead of an input field\r\n            have a recents category / component (much smaller images)\r\n        */\r\n\r\n    state = {\r\n        images: [\r\n            {img: 'irina', path: 'i.jpg', desc: ['i', 'russian', 'stockings', 'smokin', 'bed', 'lingerie']},     \r\n            {img: 'steph', path: 'ss.jpg', desc: ['bikini', 'smokin'] },\r\n            {img: 'kate', path: 'k.jpg', desc: ['k', 'blonde', 'topless', 'smokin', 'bombshell'] },\r\n            {img: 'barbara1', path: 'bp.jpg', desc: ['bp', 'lingerie', 'smokin', 'bombshell'] },\r\n            {img: 'barbara2', path: 'bp2.jpg', desc: ['bp2', 'bikini', 'smokin', 'bombshell'] },\r\n            {img: 'bp3', path: 'bp3.jpg', desc: ['bp3', 'stockings', 'lingerie', 'smokin'] },\r\n            {img: 'ah', path: 'ah.jpg', desc: ['ah', 'blonde', 'topless', 'smokin', 'tennis'] },\r\n            {img: 'hd', path: 'hd.jpg', desc: ['h', 'blonde', 'bikini', 'smokin', 'ass'] }\r\n        ],\r\n        searchTerm: 'smokin',\r\n        mostRecent: [],\r\n        cardsPicked: []\r\n    }\r\n\r\n    editSearchTerm = e => {    \r\n        this.setState({searchTerm:e.target.value})\r\n    }\r\n\r\n    dynamicSearch = () => {     \r\n        this.update = this.state.images.filter(image => image.desc.includes(this.state.searchTerm.toLowerCase()))\r\n        return this.update\r\n    }\r\n\r\n    displayRecent = () => {\r\n        // use setState to change mostRecent\r\n        // pass mostRecent as a prop to <Recent/>\r\n\r\n        this.setState({\r\n            mostRecent: [this.state.searchTerm]\r\n\r\n        })\r\n\r\n        console.log(this.state.mostRecent)\r\n    }\r\n\r\n    // practice passing information around between components\r\n    // parent to siblings and back\r\n\r\n    \r\n    displayCardsSelected = (allCardsSelected) => {\r\n        // console.log(allCardsSelected);\r\n       \r\n        //use return!!!\r\n       let temp = allCardsSelected.map((card) => {\r\n           return (\r\n               <div key={card.key}>          \r\n                    <h1>{card.score}</h1>\r\n               </div>        \r\n           )\r\n            // review when I do and don't want to use this:\r\n            // // review [...array]\r\n        })\r\n\r\n\r\n        this.setState({cardsPicked: temp})\r\n    }\r\n\r\n    showScoreHelp() {\r\n        let x = document.getElementById(\"gameScores\");\r\n        x.style.visibility === \"visible\" ? x.style.visibility = \"\" \r\n                              : x.style.visibility = \"visible\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>4,5,6</h1>\r\n\r\n                <button className=\"showScores\" onClick={this.showScoreHelp}>?</button>\r\n                <p id=\"gameScores\">Scoring:</p>\r\n                {/* <table>\r\n                <caption>\r\n                    run: <em>Earn 1.5x Ex:</em> 4,5,6<br/>\r\n                    three of a kind: <em>Earn double</em> Ex: 5,5,5\r\n                </caption>\r\n                </table> */}\r\n                \r\n                <CardTable className=\"cardtable\" cardsSelected={this.displayCardsSelected} />\r\n                {/* <input type= 'text' value= {this.state.searchTerm} onChange = {this.editSearchTerm} placeholder = 'Search for an image'/>\r\n                \r\n                <ImageList images = {this.dynamicSearch()}  searchTerm = {this.state.searchTerm} /> */}\r\n                \r\n                <div className=\"displayKeys\"> {this.state.cardsPicked} </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n"],"sourceRoot":""}